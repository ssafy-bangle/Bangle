plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation("com.auth0:java-jwt:3.10.3")
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1'

    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.70'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('bootJar'){
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5"){
        into 'static/docs'
    }
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

// Querydsl Q Class 생성 위치
def querydslDir = '/src/main/generated/'

// Querydsl Q Class 생성 위치 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// java source set 에 Querydsl Q Class 위치 추가
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

// gradle clean 시, Q Class 디렉토리까지 삭제하도록 설정
clean {
    delete file(querydslDir)

}
